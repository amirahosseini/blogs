{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\n\nconst useFetch = url => {\n  _s();\n\n  const [data, setBlogs] = useState(null);\n  const [isLoading, setisLoading] = useState(true);\n  const [Error, setError] = useState(null);\n  useEffect(() => {\n    setTimeout(() => {\n      fetch(url).then(response => {\n        if (!response.ok) {\n          throw Error('coonection to json server has a problem');\n        }\n\n        return response.json();\n      }).then(datas => {\n        setBlogs(datas);\n        setisLoading(false);\n      }).catch(err => {\n        setError(err.massage);\n      });\n    }, 1500);\n  }, [url]);\n  return {\n    blogs,\n    isLoading,\n    Error\n  };\n};\n\n_s(useFetch, \"rKtmAxmZGV7U5Vlsw3H/s1EKg0k=\");\n\nexport default useFetch;","map":{"version":3,"sources":["/home/amir/no idea/blogs/src/usefetch.js"],"names":["useEffect","useState","useFetch","url","data","setBlogs","isLoading","setisLoading","Error","setError","setTimeout","fetch","then","response","ok","json","datas","catch","err","massage","blogs"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAEA,MAAMC,QAAQ,GAAEC,GAAD,IAAO;AAAA;;AAClB,QAAM,CAACC,IAAD,EAAOC,QAAP,IAAmBJ,QAAQ,CAAC,IAAD,CAAjC;AACA,QAAM,CAACK,SAAD,EAAaC,YAAb,IAA2BN,QAAQ,CAAC,IAAD,CAAzC;AACA,QAAM,CAACO,KAAD,EAAOC,QAAP,IAAiBR,QAAQ,CAAC,IAAD,CAA/B;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,UAAU,CAAC,MAAM;AACjBC,MAAAA,KAAK,CAACR,GAAD,CAAL,CACCS,IADD,CACMC,QAAQ,IAAI;AAChB,YAAG,CAACA,QAAQ,CAACC,EAAb,EAAgB;AACd,gBAAMN,KAAK,CAAC,yCAAD,CAAX;AACD;;AACD,eAAOK,QAAQ,CAACE,IAAT,EAAP;AACD,OAND,EAOCH,IAPD,CAOMI,KAAK,IAAI;AACbX,QAAAA,QAAQ,CAACW,KAAD,CAAR;AACAT,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,OAVD,EAWCU,KAXD,CAWOC,GAAG,IAAG;AACXT,QAAAA,QAAQ,CAACS,GAAG,CAACC,OAAL,CAAR;AACD,OAbD;AAcC,KAfS,EAeP,IAfO,CAAV;AAgBD,GAjBQ,EAiBN,CAAChB,GAAD,CAjBM,CAAT;AAkBA,SAAM;AAACiB,IAAAA,KAAD;AAASd,IAAAA,SAAT;AAAqBE,IAAAA;AAArB,GAAN;AACH,CAvBD;;GAAMN,Q;;AAwBN,eAAeA,QAAf","sourcesContent":["import { useEffect, useState } from \"react\";\n\nconst useFetch=(url)=>{\n    const [data, setBlogs] = useState(null)\n    const [isLoading , setisLoading]=useState(true)\n    const [Error,setError]=useState(null)\n    useEffect(() => {\n      setTimeout(() => {\n      fetch(url)\n      .then(response => {\n        if(!response.ok){\n          throw Error('coonection to json server has a problem')\n        }\n        return response.json();\n      })\n      .then(datas => {\n        setBlogs(datas);\n        setisLoading(false)\n      })\n      .catch(err =>{\n        setError(err.massage)\n      })\n      }, 1500);\n    }, [url])\n    return{blogs , isLoading , Error}  \n}\nexport default useFetch;"]},"metadata":{},"sourceType":"module"}